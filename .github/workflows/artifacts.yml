name: Création de l’epub du PDF et des github pages
on:
  push:
    tags:
      "*"
    
  workflow_dispatch:

jobs:
  build:
    name: Build all the needed artifacts
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      # Install nix with some cache
      - name: Install Nix (upstream)
        uses: cachix/install-nix-action@v31.6.2
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            eval-cache = true
            extra-substituters = https://nix-community.cachix.org https://cache.garnix.io
            extra-trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= cache.garnix.io-1:CTFPyKSLcx3t+q56Ns4kq7YEZc8WSfbVwqy1Y3hj4W8=

      # Github cache
      - name: Restore Nix store cache
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/flake.lock') }}

      - name: Build PDF, epub and mdbook
        run: nix build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Upload epub
        id: upload-epub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./result/hpmor.epub
          asset_name: hpmor.epub
          asset_content_type: application/epub
          
      - name: Upload pdf
        id: upload-pdf
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./result/hpmor.pdf
          asset_name: hpmor.pdf
          asset_content_type: application/pdf
          
      - name: Upload mdbook
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./result/book
          
      - name: Deploy mdbook as github pages
        id: mdbook-ghpages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./result/book
          
  deploy-gh-pages:
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4



permissions:
  contents: write
  actions: read
